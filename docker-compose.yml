version: "3.4"

services:
  mysql:
    image: mysql:5.6
    ports:
      - "3316:3306"
    env_file: .env
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci

  mongodb:
    image: mongo:3.2
    # We use WiredTiger in all environments. In development environments we use small files
    # to conserve disk space, and disable the journal for a minor performance gain.
    # See https://docs.mongodb.com/v3.0/reference/program/mongod/#options for complete details.
    command: mongod --smallfiles --nojournal --storageEngine wiredTiger

  memcached:
    image: memcached:1.4

  mailcatcher:
    image: sj26/mailcatcher:latest
    ports:
      - "1080:1080"

  lms:
    build:
      context: .
      args:
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    image: xblock-proctor-exam:dev
    env_file: .env
    ports:
      - "8072:8000"
    volumes:
      # Override installed XBlock with the XBlock source directory to provide an
      # editable environment
      - ./proctor_exam:/usr/local/lib/python2.7/dist-packages/proctor_exam
      - ./config/lms/docker_run_development.py:/config/lms/docker_run_development.py
      - ./config/settings.yml:/config/lms/settings.yml
      - ./data/media:/edx/var/edxapp/media
      - ./data/store:/edx/app/edxapp/data
    command: >
      dockerize -wait tcp://mysql:3306 -timeout 60s
        python manage.py lms runserver 0.0.0.0:8000 --settings=fun.docker_run_development
    depends_on:
      - mailcatcher
      - mysql
      - mongodb
      - memcached

  cms:
    image: xblock-proctor-exam:dev
    env_file: .env
    ports:
      - "8082:8000"
    volumes:
      # Override installed XBlock with the XBlock source directory to provide an
      # editable environment
      - ./proctor_exam:/usr/local/lib/python2.7/dist-packages/proctor_exam
      - ./config/cms/docker_run_development.py:/config/cms/docker_run_development.py
      - ./config/settings.yml:/config/cms/settings.yml
      - ./data/media:/edx/var/edxapp/media
      - ./data/store:/edx/app/edxapp/data
    command: >
      dockerize -wait tcp://mysql:3306 -timeout 60s
        python manage.py cms runserver 0.0.0.0:8000 --settings=fun.docker_run_development
    depends_on:
      - lms
