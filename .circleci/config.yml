# FUN packaging CI
version: 2

# List jobs that will be integrated and executed in a workflow
jobs:

  # Build application package
  build:

    docker:
      - image: circleci/python:2.7-stretch

    steps:
      - checkout

      # Build the package (source + wheel binary)
      - run:
          name: Build application package
          command: python setup.py sdist bdist_wheel

      # List files in built archives
      - run:
          name: Check built distributions
          command: |
            echo ":::: Available distributions ::::"
            ls dist/*

            echo ":::: Wheel distribution ::::"
            unzip -l dist/*-py2-none-any.whl

            echo ":::: Source distribution ::::"
            tar tvzf dist/*.tar.gz

      # Cache built distributions
      - save_cache:
          paths:
            - ./dist
          key: v1-distributions-{{ .Revision }}

  # Check that target git tag refers to a eucalyptus branch commit and matches the
  # "version" from setup.py
  validate:

    docker:
      - image: circleci/python:2.7-stretch
        environment:
          # This is the branch that is supposed to contain target commit/tag
          TARGET_BRANCH: eucalyptus

    steps:
      - checkout

      - run:
          name: Check target tag points to a eucalyptus branch commit
          command: |
            # Get current tag corresponding commit ID
            tag_commit=$(git rev-list -n 1 $CIRCLE_TAG)

            # Check that the tag refer to a commit in the $TARGET_BRANCH (e.g.
            # the eucalyptus branch)
            git branch -a --contains ${tag_commit} | grep remotes/origin/${TARGET_BRANCH}

            # Check that the current tag (vX.Y.Z) matches the release number in
            # setup.py (X.Y.Z)
            grep "$(echo $CIRCLE_TAG | sed 's/^v/version="/')" setup.py

  # Publishing to Gemfury requires that you define the following secrets
  # environment vars in CircleCI interface:
  #   - GEMFURY_USER
  #   - GEMFURY_API_TOKEN
  gemfury:

    docker:
      - image: appropriate/curl

    # Work in the same directory as the previous "build" job
    working_directory: /home/circleci/project

    steps:
      - checkout

      # Restore built packages
      - restore_cache:
          keys:
            - v1-distributions-{{ .Revision }}

      - run:
          name: Publish distributions to Gemfury
          command: |
            echo ":::: Distributions found ::::"
            ls dist/*

            echo ":::: Publish distributions ::::"
            for dist in $(ls dist/*) ; do \
              echo "Deploy distribution: $dist" ; \
              curl -F package=@$dist https://${GEMFURY_API_TOKEN}@push.fury.io/${GEMFURY_USER}/ ; \
            done


# CI workflows
workflows:
  version: 2

  # We have a single workflow
  packaging:

    jobs:

      # The build job has no required jobs, hence this will be our first job
      - build:
          # Filtering rule to run this job: none (we accept all tags; this job
          # will always run).
          filters:
            tags:
              only: /.*/

      # Validate git tag (should refer to a eucalyptus branch commit)
      - validate:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      # Publish build packages only if the build job succeeds and it has been
      # tagged with a tag starting with the letter v
      - gemfury:
          requires:
            - validate
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
